# GitLab API access config
gitlab:
  url: https://gitlab.yourcompany.com
  token: "<private token of an admin user>"

group_settings:

  'my_group': # common settings for ALL projects in this project group

    deploy_keys:
      # this name is not actually used, it's just for you
      a_friendly_deploy_key_name:
        # you have to pass whole SSH key content here even if GitLab already has this key added and you just assign it
        # to another project here
        # this is a limitation of GitLab API
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDB2QKx6BPzL (...)"
        title: ssh_key_name_that_is_shown_in_gitlab
        # note that you can set this to `true` or `false` only on the first assignment of the key / its creation
        # see https://gitlab.com/gitlab-org/gitlab-ce/issues/30021#note_39567845
        # this is a limitation of GitLab API
        can_push: false
      # this name is not actually used, it's just for you
      another_friendly_deploy_key_name:
        key: "ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDtbyEK66RXg (...)"
        title: other_ssh_key_name_that_is_shown_in_gitlab
        can_push: false

    secret_variables:
      # this name is not actually used, it's just for you
      a_friendly_secret_variable_name:
        key: SSH_PRIVATE_KEY_BASE64
        value: "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUl (...)"

    # keys and values here are as described at https://docs.gitlab.com/ce/api/projects.html#edit-project
    project_settings:
      builds_enabled: true
      public_builds: false # "Public pipelines" checkbox in GitLab web UI
      visibility_level: 10 # internal
      only_allow_merge_if_build_succeeds: true
      only_allow_merge_if_all_discussions_are_resolved: true

    branches:
      # this name is not actually used, it's just for you
      protected_less:
        # all keys here except "branches" are parameters described at
        # https://docs.gitlab.com/ee/api/branches.html#protect-repository-branch
        protected: true
        developers_can_push: true
        developers_can_merge: true
        # this is an array of branch names for which this set of settings should be applied
        branches:
          - develop

    # service names are as in the endpoints described at https://docs.gitlab.com/ce/api/services.html
    # hashes under those name correspond to the parameters described for given service there
    # except where services are deleted with `delete: true`
    services:
      slack:
        delete: true
      drone-ci:
        delete: true
      jira:
        url: https://jira.yourcompany.com
        project_key: PRO # any JIRA project key will do

    # key names here are hook URLs and values are as parameters described at
    # https://docs.gitlab.com/ee/api/projects.html#edit-project-hook
    # except where hooks are deleted with `delete: true`
    hooks:
      'http://host.domain.com/some-old-hook-you-want-to-remove-from-config':
        delete: true
      'http://127.0.0.1:5000/hooks/merge-request':
        push_events: false # this is set to true by GitLab API by default
        merge_requests_events: true
        token: some_secret_auth_token

    # with this configuration section you can ensure that some files with appropriate content are in some or all
    # branches (or that they are NOT there)
    # note that this is gitlabform-specific feature, it DOES NOT directly correspond to GitLab API like other sections
    # (although it uses https://docs.gitlab.com/ee/api/repository_files.html)
    files:
      'README.md':
        overwrite: false
        branches:
          - develop
        content: |
          This is a default README. Please replace it with a proper one!
      '.gitlab-ci.yml':
        overwrite: true
        branches: all
        content: |
          stages:
            - test

          test:
            image: node:6
            stage: test
            script:
              - npm test
      'other-file':
        overwrite: true
        branches: all
        content: |
          Something.

project_settings:

  # these are overrides for a single project "my_project" in the "group" group
  #
  # overrides are either merged (for sections which correspond to a single thing to set, like `project_settings`
  # or additive where it is a list of things to set, like: `deploy_keys`, `secret_variables`, `hooks' and so on)
  #
  # EXCEPT when `skip: true` is set, in which case given config section is not set AT ALL for given project)
  'my_group/my_project1':

    project_settings:
      # this will make this project settings set to values defined on a group level, but with this single parameter
      # overriden
      visibility_level: 0 # private

    deploy_keys:
      # see comment above - this key will be ADDED to the keys configured on a group level
      one_more_deploy_key:
        key: ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQDB2QKx6BPzL...
        title: ssh_key_name_that_is_shown_in_gitlab_3
        can_push: false

    branches:
      # see comment above - this key will be ADDED to the keys configured on a group level
      protected_more:
        protected: true
        developers_can_push: false
        developers_can_merge: false
        branches:
          - master

    hooks:
      skip: true # this will skip whole hooks config *section* for this project, although it is set on group level

    files:
      'some-file':
        overwrite: true
        branches:
          - develop
          - master
        # setting below value to `true` will make this file be set only for the first *existing* branch in the list above
        only_first_branch: true
        content: |
          We want this file to be set only in the first existing branch from the branch list above.
      'some-path/garbage-file':
        delete: true
        branches:
          - develop
          - master
      'other-file':
        skip: true # this will skip processing this *single file* in case it is configured on a group level

# this will skip *whole* projects from being processed
skip_projects:
  - my_group/this_project_will_not_be_processed_with_gitlabform_when_running_for_my_group
  - my_group/and_this_too
